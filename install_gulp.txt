Gulp
1. Установка Gulp:
	установить Node.js from nodejs.org
	sudo npm install gulp -g
Флаг –g означает, что Gulp установится для всех пользователей, что позволяет использовать Gulp где угодно.

2. Создание проекта в Gulp
Сперва, создадим на сервере папку project, это будет корень проекта. Из этой папки запустите на выполнение следующую команду npm init:
	
	# ... из созданной папки
	npm init
Данная команда создает файл package.json, в котором хранится информация о проекте, такая как зависимости.
Как только создался файл package.json, мы можем установить в наш проект Gulp:

	npm install gulp --save-dev

Сейчас мы установили Gulp именно в наш проект, а не глобально. Вот почему команды слегка отличаются. Так как мы не устанавливаем Gulp глобально, то слово «sudo» не требуется, -g также не нужен. Мы добавили —save-dev, что означает – добавить gulp как зависимость разработчика в package.json.
Если после выполнения команды проверить папку, то можно заметить, что Gulp создал папку node_modules, внутри которой есть папка gulp.

3. Определяем структуру папок
| - app/
	|- css/
	|- fonts/
	|- images/
	|- index.html
	|- js/
	|- scss/
|- dist/
|- gulpfile.js
|- node_modules/
|- package.json






***************************************************************
Fixing npm permissions

You can fix this problem using one of two options:

Change the permission to npm's default directory.
Change npm's default directory to another directory.
You should back-up your computer before moving forward.

Option 1: Change the permission to npm's default directory

Find the path to npm's directory:

 npm config get prefix
For many systems, this will be /usr/local.

WARNING: If your path is /usr, switch to option 2.

Change the owner of npm's directory's to the effective name of the current user (your username!):

 sudo chown -R `whoami` <directory>
If you don't want to change the permissions on the entire directory, you can change permissions on the subfolders lib/node_modules, bin, and share.

Option 2: Change npm's default directory to another directory

There are times when you do not want to change ownership of the default directory that npm uses; for example, if you are sharing a machine with other users.

In this case, you can configure npm to use a different directory.

Make a directory for global installations:

 mkdir ~/npm-global
Configure npm to use the new directory path:

 npm config set prefix '~/npm-global'
Open or create a ~/.profile file and add this line:

 export PATH=~/npm-global/bin:$PATH
Back on the command line, update your system variables:

 source ~/.profile
Test: Download a package globally without using sudo.

    npm install -g jshint
Instead of steps 2-4 you can also use the corresponding ENV variable (e.g. if you don't want to modify ~/.profile):

    NPM_CONFIG_PREFIX=~/npm-global npm install -g jshint